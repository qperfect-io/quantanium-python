name: Upload Python Package

on:
  workflow_dispatch:

jobs:

  get-release:
    if: github.repository == 'qperfect-io/quantanium-python'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

          # Gets the whl directly from the created release
      - uses: robinraju/release-downloader@v1
        with:
          latest: true
          fileName: 'quantanium_wheels.zip'
          out-file-path: 'release-dists'

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: release-dists/quantanium_wheels.zip
  pypi-publish:
    needs: get-release
    if: github.repository == 'qperfect-io/quantanium-python'
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    environment:
      name: production


    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
          
      - name: unzip Wheels
        run: unzip dist/quantanium_wheels.zip -d dist/quantanium_wheels
      
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/quantanium_wheels/wheelhouse/.
          password: ${{ secrets.PYPI_API_TOKEN }}

# name: Upload Python Package

# on:
#   workflow_dispatch:

# jobs:

#   # Download release artifact from GitHub Releases
#   get-release:
#     runs-on: ubuntu-latest
#     if: github.repository == 'qperfect-io/quantanium-python'

#     steps:
#       - uses: actions/checkout@v4

#       - uses: actions/setup-python@v5
#         with:
#           python-version: "3.x"

#       - name: Download quantanium_wheels.zip from release
#         uses: robinraju/release-downloader@v1
#         with:
#           latest: true
#           fileName: 'quantanium_wheels.zip'
#           out-file-path: 'release-dists'

#       - name: Upload ZIP for next job
#         uses: actions/upload-artifact@v4
#         with:
#           name: dist-zip
#           path: release-dists/quantanium_wheels.zip


#   # Repair Windows wheels with delvewheel
#   repair-windows-wheels:
#     runs-on: windows-latest
#     needs: get-release
#     if: github.repository == 'qperfect-io/quantanium-python'

#     steps:
#       - name: Download ZIP artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: dist-zip
#           path: dist/


#       - name: Extract wheels
#         run: |
#           powershell -Command "Expand-Archive -Path 'dist\\quantanium_wheels.zip' -DestinationPath 'dist'"

#       - name: Install Python + delvewheel
#         run: |
#           python -m pip install --upgrade pip
#           pip install delvewheel


#       - name: Repair Windows wheels with delvewheel
#         shell: cmd
#         run: |
#           mkdir dist\dlls
#           xcopy /Y /S "C:\vcpkg\installed\x64-windows\bin\*.dll" dist\dlls\

#           mkdir dist\repaired
#           for %%F in (dist\wheelhouse\*win_amd64.whl) do (
#             delvewheel repair %%F --add-path dist\dlls --wheel-dir dist\repaired
#           )

#       - name: Upload repaired wheels
#         uses: actions/upload-artifact@v4
#         with:
#           name: dist-repaired-win
#           path: dist/repaired


#   # Publish all wheels (macOS + Linux + repaired Windows)


#   pypi-publish:
#     runs-on: ubuntu-latest
#     needs: [get-release, repair-windows-wheels]
#     if: github.repository == 'qperfect-io/quantanium-python'
#     permissions:
#       id-token: write
#     environment:
#       name: production

#     steps:
#       - name: Download repaired Windows wheels
#         uses: actions/download-artifact@v4
#         with:
#           name: dist-repaired-win
#           path: dist/final/

#       - name: Download original macOS/Linux wheels
#         uses: actions/download-artifact@v4
#         with:
#           name: dist-zip
#           path: dist/

#       - name: Extract non-Windows wheels
#         run: |
#           mkdir -p dist/final
#           unzip dist/quantanium_wheels.zip -d dist/tmp
#           find dist/tmp/wheelhouse -type f -name '*.whl' ! -name '*win_amd64.whl' -exec cp {} dist/final/ \;

#       - name: List all final wheels
#         run: ls -lh dist/final

#       - name: Publish all wheels to PyPI
#         uses: pypa/gh-action-pypi-publish@release/v1
#         with:
#           packages-dir: dist/final
#           password: ${{ secrets.PYPI_API_TOKEN }}

